// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/books": {
            "get": {
                "description": "Get all books in the library",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "List all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Book"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new book to the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book object",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/borrowers": {
            "get": {
                "description": "Get all registered library members",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrowers"
                ],
                "summary": "List all borrowers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Borrower"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new library member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "borrowers"
                ],
                "summary": "Create a new borrower",
                "parameters": [
                    {
                        "description": "Borrower object",
                        "name": "borrower",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Borrower"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Borrower"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/loans": {
            "get": {
                "description": "Get all loans with their status (on-time/late)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loans"
                ],
                "summary": "Get all loans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status (late/ontime)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Loan"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book loan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loans"
                ],
                "summary": "Create a new loan",
                "parameters": [
                    {
                        "description": "Loan object",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Loan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Loan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/loans/{id}/return": {
            "put": {
                "description": "Mark a book as returned",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loans"
                ],
                "summary": "Return a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Loan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Loan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Book": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "isbn": {
                    "type": "string",
                    "example": "978-0134190440"
                },
                "stock": {
                    "type": "integer",
                    "example": 5
                },
                "title": {
                    "type": "string",
                    "example": "The Go Programming Language"
                }
            }
        },
        "model.Borrower": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "id_card_no": {
                    "type": "string",
                    "example": "ID12345678"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "model.Loan": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/model.Book"
                },
                "book_id": {
                    "type": "integer",
                    "example": 1
                },
                "borrow_date": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "borrower": {
                    "$ref": "#/definitions/model.Borrower"
                },
                "borrower_id": {
                    "type": "integer",
                    "example": 1
                },
                "due_date": {
                    "type": "string",
                    "example": "2023-01-15T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_late": {
                    "type": "boolean",
                    "example": false
                },
                "return_date": {
                    "type": "string",
                    "example": "2023-01-10T00:00:00Z"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Library API",
	Description:      "REST API for library management system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
